basePath: /
definitions:
  handlers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.Post:
    properties:
      id:
        type: string
      image:
        type: string
      text:
        type: string
      userID:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:5001
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a social media application.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Jojuhu API
  version: "1.0"
paths:
  /:
    get:
      description: Returns a welcome message.
      produces:
      - text/plain
      responses:
        "200":
          description: Welcome to Jojuhu!
          schema:
            type: string
      summary: Home
      tags:
      - general
  /login:
    post:
      consumes:
      - application/json
      description: Handles user login and returns a JWT token.
      parameters:
      - description: Login credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - auth
  /posts:
    post:
      consumes:
      - application/json
      description: Creates a new post for the authenticated user.
      parameters:
      - description: Post content
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new post
      tags:
      - posts
  /profile:
    get:
      description: Retrieves the profile of the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: email
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user profile
      tags:
      - profile
  /register:
    post:
      consumes:
      - application/json
      description: Creates a new user account.
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
  /timeline:
    get:
      description: Retrieves the timeline with all posts.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
        "500":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get timeline
      tags:
      - posts
  /users/{userId}/posts:
    get:
      description: Retrieves all posts for a given user.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
        "400":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user posts
      tags:
      - posts
swagger: "2.0"
